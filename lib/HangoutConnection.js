// Generated by CoffeeScript 1.10.0
(function() {
  var HangoutApplication, root,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  HangoutApplication = (function() {
    function HangoutApplication() {
      this.sendUrl = bind(this.sendUrl, this);
      this.changeHoaStatus = bind(this.changeHoaStatus, this);
      this.changeParticipantStatus = bind(this.changeParticipantStatus, this);
      this.initialize = bind(this.initialize, this);
      gapi.hangout.onApiReady.add((function(_this) {
        return function(eventObj) {
          if (eventObj.isApiReady) {
            _this.initialize();
            gapi.hangout.onair.onBroadcastingChanged.add(_this.changeHoaStatus);
            return gapi.hangout.onParticipantsChanged.add(_this.changeParticipantStatus);
          }
        };
      })(this));
    }

    HangoutApplication.prototype.initialize = function() {
      if (gapi.hangout.data.getValue('updated') !== 'true') {
        $('button#update').click((function(_this) {
          return function() {
            return _this.sendUrl();
          };
        })(this));
        $('button#notify').click((function(_this) {
          return function() {
            return _this.sendUrl(true);
          };
        })(this));
        $('button#hide').click(gapi.hangout.hideApp);
        (new window.Timer).init();
        this.timestr = (new Date).toJSON().replace(/(.*T|:|\..*Z$)/g, '');
        this.hoa_status = 'started';
        this.sendUrl(true);
        return this.interval = setInterval(this.sendUrl, 120000);
      } else {
        return $('.controls__status').removeClass('controls__status--ok controls__status--error').addClass("controls__status--" + (gapi.hangout.data.getValue('status')));
      }
    };

    HangoutApplication.prototype.changeParticipantStatus = function(e) {
      return this.sendUrl();
    };

    HangoutApplication.prototype.changeHoaStatus = function(e) {
      var prev_hoa_status;
      prev_hoa_status = this.hoa_status;
      this.hoa_status = e.isBroadcasting && prev_hoa_status === 'started' ? 'broadcasting' : !e.isBroadcasting && prev_hoa_status === 'broadcasting' ? 'finished' : prev_hoa_status;
      if (prev_hoa_status !== this.hoa_status) {
        this.sendUrl();
        if (this.hoa_status === 'finished') {
          clearInterval(this.interval);
          return gapi.hangout.layout.displayNotice("Youtube url for this session is at: https://www.youtube.com/watch?v=" + gapi.hangout.onair.getYouTubeLiveId(), true);
        }
      }
    };

    HangoutApplication.prototype.sendUrl = function(notify) {
      var callbackUrl, hangoutUrl, hoa_status, isBroadcasting, participants, startData, youTubeLiveId;
      startData = JSON.parse(gapi.hangout.getStartData());
      callbackUrl = startData.callbackUrl + startData.hangoutId + this.timestr;
      hangoutUrl = gapi.hangout.getHangoutUrl();
      youTubeLiveId = gapi.hangout.onair.getYouTubeLiveId();
      participants = gapi.hangout.getParticipants();
      isBroadcasting = gapi.hangout.onair.isBroadcasting();
      hoa_status = this.hoa_status;
      return $.ajax({
        url: callbackUrl,
        dataType: 'text',
        type: 'PUT',
        data: {
          title: startData.title,
          project_id: startData.projectId,
          event_id: startData.eventId,
          category: startData.category,
          host_id: startData.hostId,
          participants: participants,
          hangout_url: hangoutUrl,
          yt_video_id: youTubeLiveId,
          hoa_status: hoa_status,
          notify: notify
        },
        success: function() {
          gapi.hangout.data.setValue('status', 'ok');
          if (gapi.hangout.data.getValue('updated') !== 'true') {
            gapi.hangout.layout.displayNotice('Connection to WebsiteOne established');
            gapi.hangout.data.setValue('updated', 'true');
          }
          return $('.controls__status').removeClass('controls__status--error').addClass('controls__status--ok');
        },
        error: function() {
          gapi.hangout.data.setValue('status', 'error');
          return $('.controls__status').removeClass('controls__status--ok controls__status--error').addClass('controls__status--error');
        }
      });
    };

    return HangoutApplication;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : window;

  root.HangoutApplication = HangoutApplication;

  if (typeof gadgets !== "undefined" && gadgets !== null) {
    gadgets.util.registerOnLoadHandler(new HangoutApplication());
  }

}).call(this);
