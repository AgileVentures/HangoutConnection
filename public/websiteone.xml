<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="HangoutConnectionApp">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
  <Content type="html"><![CDATA[
    <html>
<style>
/* STYLING  */
  .m-bg-metal {
    color: hsla(0,0%,20%,1);
    text-shadow: hsla(0,0%,40%,.5) 0 -1px 0, hsla(0,0%,100%,.6) 0 2px 1px;

    background-color: hsl(0,0%,90%);
    box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */
      inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */
      inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */
      inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */

      hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */
      hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */
  }

  .m-bg-linear {
    width: 100px;
    height: 80px;
    border-radius: .5em;
    background-image: -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%, .1) 7.5%),
      -webkit-repeating-linear-gradient(left, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   4%, hsla(0,0%,  0%,.03) 4.5%),
      -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.15) 2.2%),

      linear-gradient(180deg, hsl(0,0%,78%)  0%, 
        hsl(0,0%,90%) 47%, 
        hsl(0,0%,78%) 53%,
        hsl(0,0%,70%)100%);
  }

  .m-bg-linear:active {
    color: hsl(210, 100%, 40%);
    text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;
    box-shadow:
      inset hsla(210,100%,30%,  1) 0  0px 0px 4px, /* border */
      inset hsla(210,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */
      inset hsla(210,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */
      inset hsla(210,100%,100%,.7) 0  2px 1px 7px, /* top HL */

      hsla(210,100%,75%, .8) 0  0px 3px 2px, /* outer SD */
      hsla(210,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */
      hsla(210,80%,95%,   1) 0  5px 6px 4px; /* outer HL */
  }

  body {
    font-family: "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, Helvetica, sans-serif;
    margin: 0px;
    padding: 0px;
  }

/* BLOKS  */

  .panel {
    text-align: center;

    width: 100%;
    height: 100%;
    float: left;
  }

  .controls {
    width: 90%;
    height: 90%;
    margin: 0 auto 10px auto;
    border: 1px solid grey;
    box-shadow: inset 0px 0px 3px grey;
    border-radius: 5px;
  }

  .controls__header {
    text-align: center;
    padding-left: 10px;
    margin: 0 auto 20px auto;
  }

  .controls__status {
    display: inline-block;
    vertical-align: sub;
    width: 10px;
    height: 10px;
    border-radius: 50%;
  }

  .controls__status--ok {
    background-color: hsla(110, 90%, 50%, 1);
    box-shadow: inset 0px 0px 5px 1px hsla(360, 90%, 40%, 1);
    box-shadow: 0px 0px 10px 1px hsla(110, 90%, 40%, 1);
    border: 1px solid white;
  }

  .controls__status--error {
    background-color: hsla(10, 90%, 50%, 1);
    box-shadow: inset 0px 0px 5px 1px hsla(360, 90%, 40%, 1);
    box-shadow: 0px 0px 10px 1px hsla(10, 90%, 40%, 1);
    border: 1px solid white;
  }

  .controls__btn {
    border: none;
    display: block;
    margin: 0 auto 10 auto;
  }

  .controls__timer {
    margin-top: 20px;
  }

  .controls__timer__btns {
    margin-top: 10px;
  }

  .timer__label {
    display: block;
  }

  .timer__clock {
    display: block;
  }

  .timer__clock--error {
    color: red;
  }

  .timer__btn {
    width: 70px;
    margin: 0;
    padding: 0;
  }

  .timer__btn--countdown {
    display: block;
    width: 144px;
    margin-left: auto;
    margin-right: auto;
  }
</style>

<body>

  <script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script src="timer.js"></script>

  <div class='panel m-bg-metal'>
    <h3>AgileVentures<br>connection service</h3>
    <div class='controls'>
      <div class='controls__header'>
        <p>Connection status:&nbsp;&nbsp;<span class='controls__status'>&nbsp;</span></p>
      </div>
      <div class='controls__btns'>
        <button id="update" class="controls__btn m-bg-metal m-bg-linear">Update HO details</button>
        <button id="notify" class="controls__btn m-bg-metal m-bg-linear">Notify on Slack</button>
        <button id="hide" class="controls__btn m-bg-metal m-bg-linear">Hide panel</button>
      </div>
      <div class='controls__timer'>
        <span class="timer__label">Timer</span>
        <span class='timer__clock'>00:00:00</span>
        <div class='controls__timer__btns'>
          <button class='timer__btn--countdown js-timer-countdown'>Countdown 15 min</button>
          <button class='timer__btn js-timer-start'>Start</button>
          <button class='timer__btn js-timer-stop'>Stop</button>
        </div>
      </div>
    </div>
  </div>

</body>

<script>
  // Generated by CoffeeScript 1.7.1
(function() {
  this.HangoutApplication = function() {
    this.initialize = (function(_this) {
      return function() {
        if (gapi.hangout.data.getValue('updated') !== 'true') {
          $('button#update').click(function() {
            return _this.sendUrl();
          });
          $('button#notify').click(function() {
            return _this.sendUrl(true);
          });
          $('button#hide').click(gapi.hangout.hideApp);
          (new Timer).init();
          _this.sendUrl(true);
          return setInterval(_this.sendUrl, 300000);
        } else {
          return $('.d-status').removeClass('ok error').addClass(gapi.hangout.data.getValue('status'));
        }
      };
    })(this);
    this.init = (function(_this) {
      return function() {
        return gapi.hangout.onApiReady.add(function(eventObj) {
          if (eventObj.isApiReady) {
            return _this.initialize();
          }
        });
      };
    })(this);
    this.sendUrl = (function(_this) {
      return function(notify) {
        var callbackUrl, err, hangoutUrl, isBroadcasting, participants, startData, youTubeLiveId;
        startData = gapi.hangout.getStartData();
        try {
          startData = JSON.parse(startData);
          callbackUrl = startData.callbackUrl + startData.hangoutId;
        } catch (_error) {
          err = _error;
          callbackUrl = startData;
        }
        hangoutUrl = gapi.hangout.getHangoutUrl();
        youTubeLiveId = gapi.hangout.onair.getYouTubeLiveId();
        participants = gapi.hangout.getParticipants();
        isBroadcasting = gapi.hangout.onair.isBroadcasting();
        return $.ajax({
          url: callbackUrl,
          dataType: 'text',
          type: 'PUT',
          data: {
            title: startData.title,
            project_id: startData.projectId,
            event_id: startData.eventId,
            category: startData.category,
            host_id: startData.hostId,
            participants: participants,
            hangout_url: hangoutUrl,
            yt_video_id: youTubeLiveId,
            notify: notify
          },
          statusCode: {
            200: function() {
              gapi.hangout.data.setValue('status', 'ok');
              if (gapi.hangout.data.getValue('updated') !== 'true') {
                gapi.hangout.layout.displayNotice('Connection to WebsiteOne established');
                gapi.hangout.data.setValue('updated', 'true');
              }
              return $('.d-status').removeClass('ok error').addClass('ok');
            },
            500: function() {
              gapi.hangout.data.setValue('status', 'error');
              return $('.d-status').removeClass('ok error').addClass('error');
            }
          }
        });
      };
    })(this);
    return true;
  };

  if (typeof gadgets !== "undefined" && gadgets !== null) {
    gadgets.util.registerOnLoadHandler((new HangoutApplication()).init);
  }

}).call(this);

</script>

]]>
</Content>
</Module>
