<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="HangoutConnectionApp">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
  <Content type="html"><![CDATA[
    <html>
<style>
  body {
    margin: 0px;
    padding: 0px;
  }

  .l-main {
    width: 100%;
    height: 100%;
    float: left;

    font: "Droid Sans", "Lucida Sans Unicode", "Lucida Grande", Verdana, Arial, Helvetica, sans-serif;
  }

  .l-btn-group {
    height: 500px;
  }

  button {
    border: none;
    display: block;
    margin: 0 auto 10 auto;
  }

  .metal {
    text-align: center;
    color: hsla(0,0%,20%,1);
    text-shadow: hsla(0,0%,40%,.5) 0 -1px 0, hsla(0,0%,100%,.6) 0 2px 1px;

    background-color: hsl(0,0%,90%);
    box-shadow: inset hsla(0,0%,15%,  1) 0  0px 0px 4px, /* border */
      inset hsla(0,0%,15%, .8) 0 -1px 5px 4px, /* soft SD */
      inset hsla(0,0%,0%, .25) 0 -1px 0px 7px, /* bottom SD */
      inset hsla(0,0%,100%,.7) 0  2px 1px 7px, /* top HL */

      hsla(0,0%, 0%,.15) 0 -5px 6px 4px, /* outer SD */
      hsla(0,0%,100%,.5) 0  5px 6px 4px; /* outer HL */
  }

  .metal.linear {
    width: 100px;
    height: 80px;
    border-radius: .5em;
    background-image: -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0)   6%, hsla(0,0%,100%, .1) 7.5%),
      -webkit-repeating-linear-gradient(left, hsla(0,0%,  0%,0) 0%, hsla(0,0%,  0%,0)   4%, hsla(0,0%,  0%,.03) 4.5%),
      -webkit-repeating-linear-gradient(left, hsla(0,0%,100%,0) 0%, hsla(0,0%,100%,0) 1.2%, hsla(0,0%,100%,.15) 2.2%),

      linear-gradient(180deg, hsl(0,0%,78%)  0%, 
        hsl(0,0%,90%) 47%, 
        hsl(0,0%,78%) 53%,
        hsl(0,0%,70%)100%);
  }

  .metal.linear:active {
    color: hsl(210, 100%, 40%);
    text-shadow: hsla(210,100%,20%,.3) 0 -1px 0, hsl(210,100%,85%) 0 2px 1px, hsla(200,100%,80%,1) 0 0 5px, hsla(210,100%,50%,.6) 0 0 20px;
    box-shadow: 
      inset hsla(210,100%,30%,  1) 0  0px 0px 4px, /* border */
      inset hsla(210,100%,15%, .4) 0 -1px 5px 4px, /* soft SD */
      inset hsla(210,100%,20%,.25) 0 -1px 0px 7px, /* bottom SD */
      inset hsla(210,100%,100%,.7) 0  2px 1px 7px, /* top HL */

      hsla(210,100%,75%, .8) 0  0px 3px 2px, /* outer SD */
      hsla(210,50%,40%, .25) 0 -5px 6px 4px, /* outer SD */
      hsla(210,80%,95%,   1) 0  5px 6px 4px; /* outer HL */
  }

  .l-status {
    padding-left: 10px;
    text-align: center;
    margin: 0 auto 0 auto;
  }

  .d-status {
    display: inline-block;
    vertical-align: middle;
    width: 10px;
    height: 10px;
    border-radius: 50%;
  }

  .ok {
    background-color: hsla(110, 90%, 50%, 1);
    box-shadow: 0px 0px 10px 0px hsla(110, 90%, 40%, 1);
  }

  .error {
    background-color: hsla(10, 90%, 50%, 1);
    box-shadow: 0px 0px 10px 0px hsla(10, 90%, 40%, 1);
  }
</style>

<body>

  <script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

  <div class='l-main metal'>
    <h3>AgileVentures<br>connection service</h3>
    <div class='l-status'>
      <p>Connection status: <span class='d-status error'>&nbsp;</span></p>
    </div>
    <div class='l-btn-group'>
      <button id="update" class="metal linear">Update HO details</button>
      <button id="notify" class="metal linear">Notify</button>
    </div>
    <div class=''>
      <button id="hide" class="metal linear">Hide panel</button>
    </div>
  </div>

</body>

<script>
  function initialize() {
  if (gapi.hangout.data.getState()['updated'] != 'true') {
    sendUrl(true);
    gapi.hangout.data.setValue('updated', 'true');
    setInterval(sendUrl, 10000);
  } else {
    gapi.hangout.hideApp();
  }
};

function sendUrl(notify){

  var startData = gapi.hangout.getStartData();

  try {
    startData = JSON.parse(startData);
  } catch(err) {
    callbackUrl = startData;
  }

  var topic, eventId, hangoutId, callbackUrl;

  if(startData.topic !== undefined) {
    var topic = startData.topic,
    eventId = startData.eventId,
    category = startData.category,
    hangoutId = startData.hangoutId,
    callbackUrl = startData.callbackUrl + hangoutId;
  }

  var hangoutUrl = gapi.hangout.getHangoutUrl();
  var youTubeLiveId = gapi.hangout.onair.getYouTubeLiveId();
  var participants = gapi.hangout.getParticipants();

  $.ajax({
    url: callbackUrl,
    dataType: 'text',
    type: 'PUT',
    data: {
      topic: topic,
      event_id: eventId,
      category: category,
      hangout_url: hangoutUrl,
      YouTubeLiveId: youTubeLiveId,
      participants: participants,
      notify: notify
    },
    statusCode: {
      200: function() {
        gapi.hangout.data.setValue('status', 'ok');
        $('.d-status').removeClass('ok error').addClass('ok');
      },
      500: function() {
        gapi.hangout.data.setValue('status', 'error');
        $('.d-status').removeClass('ok error').addClass('error');
      }
    }
  })
}

function init() {
  // When API is ready...
  gapi.hangout.onApiReady.add(
    function(eventObj) {
    if (eventObj.isApiReady) {
      initialize();
      $('button#update').click(function(){
        sendUrl();
      });
      $('button#notify').click(function(){
        sendUrl(true);
      });
      $('button#hide').click(function(){
        gapi.hangout.hideApp();
      });
    }
  });
}

// Wait for gadget to load.
function registerInit(){ gadgets.util.registerOnLoadHandler(init) };

registerInit();

</script>

]]>
</Content>
</Module>
